(function (global, factory) {
  if (typeof define === 'function' && define.amd) {
    define(['exports'], factory);
  } else if (typeof exports !== 'undefined') {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.index = mod.exports;
  }
})(this, function (exports) {
  'use strict';

  function scrollToEnd(scroll, handler) {
    var self = this;
    var total = 0;
    var batches = 0;
    var timedOut = false;

    return function (res) {
      var scrollId = res._scroll_id;
      var timedOut = res.timed_out;
      if (timedOut) return Promise.resolve({ timedOut: timedOut, batches: batches, total: total });

      return next({ scroll: scroll, scrollId: scrollId, handler: handler });
    };

    function next(_ref) {
      var scroll = _ref.scroll;
      var scrollId = _ref.scrollId;
      var handler = _ref.handler;

      return self.scroll({ scroll: scroll, scrollId: scrollId }).then(function (res) {
        scrollId = res._scroll_id;

        var timedOut = res.timed_out;
        if (timedOut) return Promise.resolve({ timedOut: timedOut, batches: batches, total: total });

        var hits = res.hits.hits;
        if (hits.length === 0) return Promise.resolve({ timedOut: timedOut, batches: batches, total: total });

        total += hits.length;
        batches += 1;

        return handler(res).then(function (res) {
          return next({ scroll: scroll, scrollId: scrollId, handler: handler });
        });
      });
    }
  };

  function esPlugin(Client, config, components) {
    Client.prototype.scrollToEnd = scrollToEnd;
  }

  module.exports = scrollToEnd;
  module.exports.plugin = esPlugin;
});
